---
swagger: "2.0"
info:
  description: "This is a simple bookstore server with a book inventory, users and\
    \ a shopping cart."
  version: "1.0.0"
  title: "Hypermedia project - bookstore"
  contact:
    email: "bernardo.casasole@mail.polimi.it"
  license:
    name: "Apache-2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v2"
tags:
- name: "book"
  description: "Available book"
- name: "user"
  description: "Operations about user"
- name: "event"
  description: "Operation about events"
- name: "cart"
  description: "Access to the cart"
- name: "author"
  description: "Operation about authors"
schemes:
- "https"
- "http"
paths:
  /books:
    get:
      tags:
      - "book"
      summary: "Books available in the inventory"
      description: "List of books available in the inventory"
      operationId: "booksGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of Books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books/{bookId}:
    get:
      tags:
      - "book"
      summary: "Find book by ID"
      description: "Returns a book"
      operationId: "getBookById"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /authors:
    get:
      tags:
      - "author"
      summary: "Authors present in our website"
      description: "List of authors  present in our website"
      operationId: "authorsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of Author"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Author"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Author"
  /author/{authorId}:
    get:
      tags:
      - "author"
      summary: "Find author by ID"
      description: "Returns an author"
      operationId: "getAuthorById"
      produces:
      - "application/json"
      parameters:
      - name: "authorId"
        in: "path"
        description: "ID of author to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Author not found"
      x-swagger-router-controller: "Author"
  /events:
    get:
      tags:
      - "event"
      summary: "Events in schedule"
      description: "List of events in schedule"
      operationId: "eventsGET"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Pagination offset. Default is 0."
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
        required: false
        type: "integer"
      responses:
        200:
          description: "A collection of events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Event"
  /events/{eventId}:
    get:
      tags:
      - "event"
      summary: "Find event by ID"
      description: "Returns a specific event"
      operationId: "findEventById"
      produces:
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to register in"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Login"
      description: "Login with a form"
      operationId: "userLoginPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "succesfull login"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /user/register:
    post:
      tags:
      - "user"
      summary: "Register"
      description: "Register into the store"
      operationId: "userRegisterPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "succesfull registration"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /cart/{cartId}:
    get:
      tags:
      - "cart"
      summary: "View the content of the cart"
      operationId: "cartCartIdGET"
      produces:
      - "application/json"
      parameters:
      - name: "cartId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "succesful operartion"
          schema:
            $ref: "#/definitions/Cart"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
definitions:
  Author:
    type: "object"
    required:
    - "name"
    - "surname"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      surname:
        type: "string"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"
    title: "Author"
    description: "Author present in our website"
    example:
      id: 0
      name: "Luigi"
      surname: "Pirandello"
      books:
      - id: 0
        title: "La roba"
        author: "Luigi Pirandello"
        price:
          value: 10
          currency: "eur"
      - id: 1
        title: "Uno nessuno centomila"
        author: "Luigi Pirandello"
        price:
          value: 20
          currency: "eur"
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      presentedBook:
        $ref: "#/definitions/Book"
      date:
        type: "string"
      subscribers:
        type: "integer"
    title: "Event"
    description: "An event available in our website"
    example:
      id: 1
      name: "Manzoni Presentation"
      presentedBook:
      - id: 0
        title: "I promessi sposi"
        author: "Alessandro Manzoni"
        price:
          value: 10
          currency: "eur"
      date: "1/6/2019"
      subscribers: "1"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
      creditcard:
        type: "string"
    title: "User"
    description: "A user"
    example:
      id: 1
      name: "Vittorio"
      address: "DEIB"
      creditcard: "xyzabc"
  Cart:
    type: "object"
    properties:
      total:
        $ref: "#/definitions/Amount"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"
    title: "Cart"
    description: "Order for books"
    example:
      total:
        currency: "eur"
        value: 101.1700000000000017053025658242404460906982421875
      books:
      - id: 0
        title: "Il deserto dei tartari"
        author: "Dino Buzzati"
        price:
          value: 10
          currency: "eur"
      - id: 0
        title: "Il deserto dei tartari"
        author: "Dino Buzzati"
        price:
          value: 10
          currency: "eur"
  Book:
    type: "object"
    required:
    - "author"
    - "price"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      author:
        type: "string"
      price:
        $ref: "#/definitions/Amount"
      status:
        type: "string"
        description: "book availability in the inventory"
        enum:
        - "available"
        - "out of stock"
    title: "Book"
    description: "A book for sale in the store"
    example:
      id: 0
      title: "Il deserto dei tartari"
      author: "Dino Buzzati"
      price:
        value: 10
        currency: "eur"
      status: "available"
  Amount:
    type: "object"
    required:
    - "currency"
    - "value"
    properties:
      value:
        type: "number"
        format: "double"
        minimum: 0.01
        maximum: 1000000000000000
      currency:
        $ref: "#/definitions/Currency"
    description: "Price\n"
    example:
      currency: "eur"
      value: 11
  Currency:
    type: "string"
    pattern: "^[A-Z]{3,3}$"
    description: "some description\n"
    example: "eur"
